plugins {
    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id "io.github.ddimtirov.codacy" version "0.1.0"
    id "com.diffplug.gradle.spotless" version "3.18.0"
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "jacoco"
apply plugin: 'io.spring.dependency-management'

wrapper{
    gradleVersion = '5.2.1'
    distributionType = Wrapper.DistributionType.BIN
}

group = 'uk.ac.ebi.ena.webin-cli'
ext.version_base = '1.8.1'
version = version_base
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

spotless {
    java {
        licenseHeader('''/*
 * Copyright 2018-2019 EMBL - European Bioinformatics Institute
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
''')
        importOrder 'java', 'javax', 'org', 'com', '', 'uk'
        removeUnusedImports()
    }
}

bootJar {

    mainClassName = 'uk.ac.ebi.ena.webin.cli.WebinCli'
    excludeDevtools = true
   	manifest {
        attributes 'Implementation-Title': 'webin-cli',
                   'Implementation-Version': version_base,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date()
    }
}

configurations.all {
	
	if( !hasProperty( 'artifactoryUsername' ) )
		project.ext.properties.artifactoryUsername = ''
	else
		project.ext.properties.artifactoryUsername = artifactoryUsername;
		
	if( !hasProperty( 'artifactoryPassword' ) )
		project.ext.properties.artifactoryPassword = ''
	else
	 	project.ext.properties.artifactoryPassword = artifactoryPassword;

	if( !hasProperty( 'gitlab_private_token' ) )
		project.ext.properties.gitlab_private_token = ''
	else
		project.ext.properties.gitlab_private_token = gitlab_private_token;
}


test {
	jvmArgs "-Dfile.encoding=UTF-8"
	maxHeapSize = '4G'

	if( System.env.webin_cli_password ) {
      	environment 'webin-cli-password', System.env.webin_cli_password
    } else {
    	environment 'webin-cli-password', webinCliPassword
    }

	if( System.env.webin_cli_username ) {
      	environment 'webin-cli-username', System.env.webin_cli_username
    } else {
    	environment 'webin-cli-username', webinCliUsername
    }
}

repositories {
    mavenLocal()
    maven { url "https://gitlab.ebi.ac.uk/api/v4/groups/enasequence/-/packages/maven" }
    mavenCentral()
}

task printWebinTestCredentials {
    doLast {
        println 'webinCliUsername: ' + webinCliUsername
        println 'webinCliPassword: ' + webinCliPassword
    }
}

dependencies {
    implementation("commons-net:commons-net:3.4")
    implementation(group: 'com.beust', name: 'jcommander', version: '1.72')
    implementation(group: 'uk.ac.ebi.ena.sequence', name: 'embl-api-ff', version: '1.3.11')
    implementation(group: 'uk.ac.ebi.ena.sequence', name: 'embl-api-core', version: '1.3.11')
    implementation(group: 'uk.ac.ebi.ena.sequence', name: 'embl-api-validator', version: '1.3.11')
    implementation("org.jdom:jdom:2.0.2")


    // implementation(group: 'com.opencsv', name: 'opencsv', version: '4.5')
    // implementation(group: 'org.apache.poi', name: 'poi', version: '4.0.1')


    implementation( group: 'uk.ac.ebi.ena', name: 'readtools', version: '1.0.0' )
    implementation( group: 'uk.ac.ebi.ena', name: 'ena-cram-processing-tools', version: '1.1.0' )
    implementation( group: 'com.github.samtools', name: 'htsjdk', version: '2.15.0' )
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    // implementation("org.projectlombok:lombok:1.18.4")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.assertj:assertj-core:3.11.1')
    testImplementation('org.mockito:mockito-core:2.23.4')
}

configurations.all {
    resolutionStrategy {
      force "commons-net:commons-net:3.4"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }
    repositories {
	    maven {
            // Project specific maven repository in Gitlab.
            url "https://gitlab.ebi.ac.uk/api/v4/projects/811/packages/maven"
            // Developer token in Gitlab.
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = project.ext.properties.gitlab_private_token
            }
            authentication {
                header( HttpHeaderAuthentication )
            }
	    }
    }
}

task writePom {
    doLast {
        pom {
            project {
                inceptionYear '2019'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo( "pom.xml" )
    }
}   


compileJava.dependsOn( writePom )
