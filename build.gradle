plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id "com.diffplug.spotless" version "5.1.1"
    id "com.palantir.docker" version "0.22.1"
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

apply plugin: 'io.spring.dependency-management'

group = 'uk.ac.ebi.ena.webin-cli'
version = '6.5.1'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

ext['log4j2.version'] = '2.16.0'

spotless {
    java {
        licenseHeader('''/*
 * Copyright 2018-2021 EMBL - European Bioinformatics Institute
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
''')
        importOrder 'java', 'javax', 'org', 'com', '', 'uk'
        removeUnusedImports()
    }
}

bootJar {
    mainClassName = 'uk.ac.ebi.ena.webin.cli.WebinCli'
    excludeDevtools = true
   	manifest {
        attributes 'Implementation-Title': project.name,
                   'Implementation-Version': project.version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date()
    }
}

/**
 * Works when '-x bootJar' is used. See 'Library Jar Publishing' in README.md.
 */
jar {
    enabled true

    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date()
    }

    exclude('logback.xml')
}

test {
	jvmArgs "-Dfile.encoding=UTF-8"
	maxHeapSize = '4G'

	if( System.env.webin_cli_password ) {
      	environment 'webin-cli-password', System.env.webin_cli_password
    } else {
    	environment 'webin-cli-password', webinCliPassword
    }

	if( System.env.webin_cli_username ) {
      	environment 'webin-cli-username', System.env.webin_cli_username
    } else {
    	environment 'webin-cli-username', webinCliUsername
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://gitlab.ebi.ac.uk/api/v4/groups/enasequence/-/packages/maven"

        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = gitlab_private_token
        }
        authentication {
            header( HttpHeaderAuthentication )
        }
    }
    // For BioSamples client
    maven {
        url 'https://gitlab.ebi.ac.uk/api/v4/projects/2669/packages/maven'

        credentials(HttpHeaderCredentials) {
            name = "Private-Token"
            value = biosamples_gitlab_private_token
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
    mavenCentral()
}
//
task printWebinTestCredentials {
    doLast {
        println 'webinCliUsername: ' + webinCliUsername
        println 'webinCliPassword: ' + webinCliPassword
    }
}

dependencies {
    // dependencies declared as 'api' so they can be exposed to projects that use webin-cli as a library.
    api( 'uk.ac.ebi.ena.sequence:sequencetools:2.17.6' )
    api( 'uk.ac.ebi.ena.txmbtools:txmbtools:1.0.3' )
    api( 'uk.ac.ebi.ena:readtools:1.17.7' )

    implementation( 'ch.qos.logback:logback-classic:1.2.3' )

    implementation( 'org.springframework.retry:spring-retry:1.3.0' )

    implementation( "commons-net:commons-net:3.7.2" )

    implementation( 'info.picocli:picocli:4.6.3' )

    implementation( 'org.fusesource.jansi:jansi:1.18' )

    implementation( 'de.vandermeer:asciitable:0.3.2' )

    implementation( "org.jdom:jdom:2.0.2" )

    // implementation('com.opencsv:opencsv:4.5')
    implementation( 'org.apache.poi:poi:4.0.1' )
    implementation( 'org.apache.poi:poi-ooxml:4.0.1' )

    testImplementation( 'junit:junit:4.13' )
    testImplementation( 'org.assertj:assertj-core:3.11.1' )
    testImplementation( 'org.mockito:mockito-core:2.23.4' )
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
        	artifactId project.name
            from components.java
            artifact sourceJar
        }
    }
    repositories {
	    maven {
            url "https://gitlab.ebi.ac.uk/api/v4/projects/811/packages/maven"
            credentials(HttpHeaderCredentials) {
                name = "Private-Token"
                value = project.ext.properties.gitlab_private_token
            }
            authentication {
                header( HttpHeaderAuthentication )
            }
	    }
    }
}

// Build and deploy docker image:
// gradle docker
// gradle dockerTag
// gradle dockerTagsPush

docker {
    dependsOn build
    def repository = "enasequence/webin-cli"
    name "${repository}:${version}"
    tag "-latest" , "${repository}:latest"
    tag "-${version}" , "${repository}:${version}"
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "webin-cli-${version}.jar"])
}
